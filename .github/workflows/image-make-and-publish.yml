name: Docker

on:
  workflow_dispatch:
  push:
    branches: [ master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.actor }}/ghost

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        base: ['ubi']
        version: [4]
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Dotenv load
        id: dotenv
        uses: falti/dotenv-action@v0.2.7

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.dotenv.outputs.ghost_version }}-${{ matrix.base }}
            type=raw,value=${{ matrix.version }}-${{ matrix.base }}
            type=sha

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64
          context: ./${{ matrix.version }}/${{ matrix.base }}
          build-args: |
            GHOST_CLI_VERSION=${{ steps.dotenv.outputs.ghost_cli_version }}
            GHOST_VERSION=${{ steps.dotenv.outputs.ghost_version }}
          push: ${{ github.event_name != 'pull_request' && github.ref_name == 'master' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' && github.ref_name == 'master' && !github.event.repository.private }}
        run: cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: "true"
